(()=>{"use strict";var t={28:(t,n,e)=>{e.d(n,{Z:()=>b});var i=e(15),o=e.n(i),r=e(645),A=e.n(r),a=e(667),s=e.n(a),c=e(610),d=e(199),l=e(240),h=e(100),C=A()(o()),m=s()(c.Z),p=s()(d.Z),g=s()(l.Z),u=s()(h.Z);C.push([t.id,'* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: "Josefin Sans", sans-serif;\n}\n\nhtml,\nbody {\n\tfont-size: 18px;\n\tmin-height: 100vh;\n\ttransition: 0.3s;\n}\n\nbody {\n\tbackground-color: #181824;\n\tbackground-image: url('+m+");\n\tbackground-repeat: no-repeat;\n\tbackground-size: contain;\n\tdisplay: flex;\n}\n\n/* LIGHT */\nbody.light {\n\tbackground-color: #fafafa;\n\tbackground-image: url("+p+');\n}\n\nmain {\n\tmargin: 0 auto;\n\tmargin-top: 3rem;\n\tmin-width: 450px;\n\twidth: 45%;\n}\n\n/* HEADER */\nheader {\n\talign-items: center;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 3rem;\n}\n\nheader img {\n\theight: 25px;\n\twidth: 25px;\n\tcursor: pointer;\n}\n\nheader h1 {\n\tfont-size: 2.8rem;\n\tletter-spacing: 15px;\n\tcolor: white;\n}\n/* END HEADER */\n\n.container {\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n\tborder-radius: 5px;\n}\n\n/* ADDBAR */\n\narticle.item {\n\tmargin-bottom: 1rem;\n\tborder-radius: 5px;\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n}\n\narticle span {\n\tborder: 1px solid #61637a;\n\tborder-radius: 50%;\n\tmargin-right: 1rem;\n\tflex-grow: 0;\n\tpadding: 10px;\n}\n/* LIGHT */\n\nbody.light article span {\n\tborder: 1px solid #c7c6cb;\n}\n\narticle input {\n\tappearance: none;\n\tbackground: none;\n\tborder: none;\n\tfont-size: 18px;\n\toutline: none;\n\twidth: 100%;\n\theight: 20px;\n}\n\n/* END ADDBAR */\n\n/* ITEMS */\n#todoList li:first-child {\n\tborder-radius: 5px 5px 0px 0px;\n}\n\n.item {\n\talign-items: center;\n\tbackground-color: #25273c;\n\tdisplay: flex;\n\theight: 60px;\n\tlist-style: none;\n\tpadding: 1.5rem;\n\tposition: relative;\n}\n\n/* LIGHT */\n\nbody.light .item {\n\tbackground-color: white;\n}\n\n.item > input {\n\tcolor: white;\n}\n\n/* LIGHT */\n\nbody.light .item > input {\n\tcolor: #565567;\n}\n\n.no-items {\n\tjustify-content: space-around;\n\tborder-radius: 5px 5px 0px 0px !important;\n\tdisplay: none;\n}\n\n.no-items p,\n.no-items i {\n\tcolor: white;\n\ttext-align: center;\n}\n\n/* LIGHT */\nbody.light .no-items p,\nbody.light .no-items i {\n\tcolor: #565567;\n}\n\n.item.checked p {\n\tcolor: #5b5c78;\n\tcursor: default;\n\ttext-decoration: line-through;\n}\n\n/* LIGHT */\n\nbody.light .item.checked p {\n\tcolor: #d1d1d3;\n}\n\nli.todo-item {\n\tborder-bottom: 1px solid #61637a;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item {\n\tborder-bottom: 1px solid #d1d1d3;\n}\n\nli.todo-item p {\n\tmargin-right: auto;\n\tcolor: white;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item p {\n\tcolor: #5b5c78;\n}\n\nli.todo-item:hover img {\n\tvisibility: visible;\n\tcursor: pointer;\n}\n\nli.todo-item input[type="checkbox"] {\n\tappearance: none;\n\tborder: 1px solid #61637a;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\tmargin-right: 1rem;\n\tpadding: 10px;\n\tposition: relative;\n}\n\n/* LIGHT */\nbody.light li.todo-item input[type="checkbox"] {\n\tborder: 1px solid #c7c6cb;\n}\n\nli.todo-item input[type="checkbox"]:focus {\n\toutline: none;\n}\n\nli.todo-item input[type="checkbox"]:hover {\n\tbackground-image: linear-gradient(\n\t\tto right bottom,\n\t\t#67bff7,\n\t\t#64b1fc,\n\t\t#72a1fd,\n\t\t#8a8ff7,\n\t\t#a678e9\n\t);\n\tborder: 1px solid transparent;\n\toutline: none;\n\tpadding: 1px;\n}\n\nli.todo-item input[type="checkbox"]:hover::before {\n\tcontent: "";\n\twidth: 16px;\n\theight: 16px;\n\tdisplay: block;\n\tbackground-color: #25273c;\n\tborder-radius: 50%;\n\tpadding: 1px;\n}\n\n/* LIGHT */\nbody.light input[type="checkbox"]:hover::before {\n\tbackground-color: white;\n}\n\nli.todo-item input[type="checkbox"]:checked {\n\talign-items: center;\n\tbackground-image: linear-gradient(\n\t\tto right bottom,\n\t\t#67bff7,\n\t\t#64b1fc,\n\t\t#72a1fd,\n\t\t#8a8ff7,\n\t\t#a678e9\n\t);\n\tborder: 1px solid transparent;\n\tdisplay: flex;\n\tjustify-content: center;\n\theight: 22px;\n\toutline: none;\n\twidth: 22px !important;\n}\n\nli.todo-item input[type="checkbox"]:checked::before {\n\tcontent: "\\f00c";\n\tfont-family: "Font Awesome 5 Free";\n\tfont-weight: 900;\n\tfont-size: 10px;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item input[type="checkbox"]:checked::before {\n\tcolor: white;\n}\n\nli.todo-item input[type="checkbox"]:checked:hover::before {\n\tcontent: "\\f00c";\n\tbackground-color: unset;\n\tfont-family: "Font Awesome 5 Free";\n\tfont-weight: 900;\n\tfont-size: 10px;\n\theight: unset;\n\tpadding: unset;\n\twidth: unset;\n}\n\nli.todo-item input[type="checkbox"]:checked:hover {\n\tpadding: 6px;\n}\n\nli.todo-item img {\n\tvisibility: hidden;\n}\n\nhr.line {\n\tborder: 0.5px solid #61637a;\n\tmargin-block-end: unset;\n\tmargin-block-start: unset;\n\tmargin-inline-end: unset;\n\tmargin-inline-start: unset;\n\tmargin: 0.4rem;\n}\n\narticle.footer {\n\tjustify-content: space-between;\n\tborder-radius: 0px 0px 5px 5px;\n\tbox-shadow: unset !important;\n}\n\narticle.footer *,\ndiv a {\n\tfont-size: 0.7rem;\n\tcolor: #5b5c78;\n}\n\n/* LIGHT */\n\nbody.light article.footer *,\nbody.light div a {\n\tcolor: #95959d;\n}\n\ndiv a,\narticle.footer p:last-child {\n\tcursor: pointer;\n}\n\ndiv a:hover,\narticle.footer p:last-child:hover,\ndiv a.active,\narticle.footer p:last-child.active {\n\tcolor: white;\n}\n\n/* LIGHT */\nbody.light div a:hover,\nbody.light article.footer p:last-child:hover,\nbody.light div a.active,\nbody.light article.footer p:last-child.active {\n\tcolor: #4c4b5b;\n}\n\na.blue {\n\tcolor: #3b6ad6 !important;\n}\n\na.blue.active {\n\tcolor: #5577c3 !important;\n}\n\narticle.footer div a:nth-child(2) {\n\tmargin: 0 0.7rem;\n}\n\n.filter-container {\n\tborder-radius: 5px;\n\tjustify-content: space-around;\n\tmargin-bottom: 2rem;\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n}\n\n.filter-container a {\n\tfont-size: 1rem;\n}\n\n/* END ITEMS */\n\nfooter {\n\tcolor: #61637a;\n\tfont-size: 0.7rem;\n\tfont-weight: 400;\n\ttext-align: center;\n\tmargin-bottom: 2rem;\n}\n\n@media only screen and (max-width: 520px) {\n\tbody {\n\t\tbackground-image: url('+g+");\n\t}\n\n\t/* LIGHT */\n\tbody.light {\n\t\tbackground-image: url("+u+");\n\t}\n\n\tmain {\n\t\tmin-width: 300px;\n\t\twidth: 85%;\n\t}\n\n\theader h1 {\n\t\tfont-size: 2.2rem;\n\t}\n\n\tli.todo-item img {\n\t\tvisibility: visible;\n\t}\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:['* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tfont-family: "Josefin Sans", sans-serif;\n}\n\nhtml,\nbody {\n\tfont-size: 18px;\n\tmin-height: 100vh;\n\ttransition: 0.3s;\n}\n\nbody {\n\tbackground-color: #181824;\n\tbackground-image: url("../images/bg-desktop-dark.jpg");\n\tbackground-repeat: no-repeat;\n\tbackground-size: contain;\n\tdisplay: flex;\n}\n\n/* LIGHT */\nbody.light {\n\tbackground-color: #fafafa;\n\tbackground-image: url("../images/bg-desktop-light.jpg");\n}\n\nmain {\n\tmargin: 0 auto;\n\tmargin-top: 3rem;\n\tmin-width: 450px;\n\twidth: 45%;\n}\n\n/* HEADER */\nheader {\n\talign-items: center;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tmargin-bottom: 3rem;\n}\n\nheader img {\n\theight: 25px;\n\twidth: 25px;\n\tcursor: pointer;\n}\n\nheader h1 {\n\tfont-size: 2.8rem;\n\tletter-spacing: 15px;\n\tcolor: white;\n}\n/* END HEADER */\n\n.container {\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n\tborder-radius: 5px;\n}\n\n/* ADDBAR */\n\narticle.item {\n\tmargin-bottom: 1rem;\n\tborder-radius: 5px;\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n}\n\narticle span {\n\tborder: 1px solid #61637a;\n\tborder-radius: 50%;\n\tmargin-right: 1rem;\n\tflex-grow: 0;\n\tpadding: 10px;\n}\n/* LIGHT */\n\nbody.light article span {\n\tborder: 1px solid #c7c6cb;\n}\n\narticle input {\n\tappearance: none;\n\tbackground: none;\n\tborder: none;\n\tfont-size: 18px;\n\toutline: none;\n\twidth: 100%;\n\theight: 20px;\n}\n\n/* END ADDBAR */\n\n/* ITEMS */\n#todoList li:first-child {\n\tborder-radius: 5px 5px 0px 0px;\n}\n\n.item {\n\talign-items: center;\n\tbackground-color: #25273c;\n\tdisplay: flex;\n\theight: 60px;\n\tlist-style: none;\n\tpadding: 1.5rem;\n\tposition: relative;\n}\n\n/* LIGHT */\n\nbody.light .item {\n\tbackground-color: white;\n}\n\n.item > input {\n\tcolor: white;\n}\n\n/* LIGHT */\n\nbody.light .item > input {\n\tcolor: #565567;\n}\n\n.no-items {\n\tjustify-content: space-around;\n\tborder-radius: 5px 5px 0px 0px !important;\n\tdisplay: none;\n}\n\n.no-items p,\n.no-items i {\n\tcolor: white;\n\ttext-align: center;\n}\n\n/* LIGHT */\nbody.light .no-items p,\nbody.light .no-items i {\n\tcolor: #565567;\n}\n\n.item.checked p {\n\tcolor: #5b5c78;\n\tcursor: default;\n\ttext-decoration: line-through;\n}\n\n/* LIGHT */\n\nbody.light .item.checked p {\n\tcolor: #d1d1d3;\n}\n\nli.todo-item {\n\tborder-bottom: 1px solid #61637a;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item {\n\tborder-bottom: 1px solid #d1d1d3;\n}\n\nli.todo-item p {\n\tmargin-right: auto;\n\tcolor: white;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item p {\n\tcolor: #5b5c78;\n}\n\nli.todo-item:hover img {\n\tvisibility: visible;\n\tcursor: pointer;\n}\n\nli.todo-item input[type="checkbox"] {\n\tappearance: none;\n\tborder: 1px solid #61637a;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\tmargin-right: 1rem;\n\tpadding: 10px;\n\tposition: relative;\n}\n\n/* LIGHT */\nbody.light li.todo-item input[type="checkbox"] {\n\tborder: 1px solid #c7c6cb;\n}\n\nli.todo-item input[type="checkbox"]:focus {\n\toutline: none;\n}\n\nli.todo-item input[type="checkbox"]:hover {\n\tbackground-image: linear-gradient(\n\t\tto right bottom,\n\t\t#67bff7,\n\t\t#64b1fc,\n\t\t#72a1fd,\n\t\t#8a8ff7,\n\t\t#a678e9\n\t);\n\tborder: 1px solid transparent;\n\toutline: none;\n\tpadding: 1px;\n}\n\nli.todo-item input[type="checkbox"]:hover::before {\n\tcontent: "";\n\twidth: 16px;\n\theight: 16px;\n\tdisplay: block;\n\tbackground-color: #25273c;\n\tborder-radius: 50%;\n\tpadding: 1px;\n}\n\n/* LIGHT */\nbody.light input[type="checkbox"]:hover::before {\n\tbackground-color: white;\n}\n\nli.todo-item input[type="checkbox"]:checked {\n\talign-items: center;\n\tbackground-image: linear-gradient(\n\t\tto right bottom,\n\t\t#67bff7,\n\t\t#64b1fc,\n\t\t#72a1fd,\n\t\t#8a8ff7,\n\t\t#a678e9\n\t);\n\tborder: 1px solid transparent;\n\tdisplay: flex;\n\tjustify-content: center;\n\theight: 22px;\n\toutline: none;\n\twidth: 22px !important;\n}\n\nli.todo-item input[type="checkbox"]:checked::before {\n\tcontent: "\\f00c";\n\tfont-family: "Font Awesome 5 Free";\n\tfont-weight: 900;\n\tfont-size: 10px;\n}\n\n/* LIGHT */\n\nbody.light li.todo-item input[type="checkbox"]:checked::before {\n\tcolor: white;\n}\n\nli.todo-item input[type="checkbox"]:checked:hover::before {\n\tcontent: "\\f00c";\n\tbackground-color: unset;\n\tfont-family: "Font Awesome 5 Free";\n\tfont-weight: 900;\n\tfont-size: 10px;\n\theight: unset;\n\tpadding: unset;\n\twidth: unset;\n}\n\nli.todo-item input[type="checkbox"]:checked:hover {\n\tpadding: 6px;\n}\n\nli.todo-item img {\n\tvisibility: hidden;\n}\n\nhr.line {\n\tborder: 0.5px solid #61637a;\n\tmargin-block-end: unset;\n\tmargin-block-start: unset;\n\tmargin-inline-end: unset;\n\tmargin-inline-start: unset;\n\tmargin: 0.4rem;\n}\n\narticle.footer {\n\tjustify-content: space-between;\n\tborder-radius: 0px 0px 5px 5px;\n\tbox-shadow: unset !important;\n}\n\narticle.footer *,\ndiv a {\n\tfont-size: 0.7rem;\n\tcolor: #5b5c78;\n}\n\n/* LIGHT */\n\nbody.light article.footer *,\nbody.light div a {\n\tcolor: #95959d;\n}\n\ndiv a,\narticle.footer p:last-child {\n\tcursor: pointer;\n}\n\ndiv a:hover,\narticle.footer p:last-child:hover,\ndiv a.active,\narticle.footer p:last-child.active {\n\tcolor: white;\n}\n\n/* LIGHT */\nbody.light div a:hover,\nbody.light article.footer p:last-child:hover,\nbody.light div a.active,\nbody.light article.footer p:last-child.active {\n\tcolor: #4c4b5b;\n}\n\na.blue {\n\tcolor: #3b6ad6 !important;\n}\n\na.blue.active {\n\tcolor: #5577c3 !important;\n}\n\narticle.footer div a:nth-child(2) {\n\tmargin: 0 0.7rem;\n}\n\n.filter-container {\n\tborder-radius: 5px;\n\tjustify-content: space-around;\n\tmargin-bottom: 2rem;\n\tbox-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.37);\n}\n\n.filter-container a {\n\tfont-size: 1rem;\n}\n\n/* END ITEMS */\n\nfooter {\n\tcolor: #61637a;\n\tfont-size: 0.7rem;\n\tfont-weight: 400;\n\ttext-align: center;\n\tmargin-bottom: 2rem;\n}\n\n@media only screen and (max-width: 520px) {\n\tbody {\n\t\tbackground-image: url("../images/bg-mobile-dark.jpg");\n\t}\n\n\t/* LIGHT */\n\tbody.light {\n\t\tbackground-image: url("../images/bg-mobile-light.jpg");\n\t}\n\n\tmain {\n\t\tmin-width: 300px;\n\t\twidth: 85%;\n\t}\n\n\theader h1 {\n\t\tfont-size: 2.2rem;\n\t}\n\n\tli.todo-item img {\n\t\tvisibility: visible;\n\t}\n}\n'],sourceRoot:""}]);const b=C},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e=t(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(t,e,i){"string"==typeof t&&(t=[[null,t,""]]);var o={};if(i)for(var r=0;r<this.length;r++){var A=this[r][0];null!=A&&(o[A]=!0)}for(var a=0;a<t.length;a++){var s=[].concat(t[a]);i&&o[s[0]]||(e&&(s[2]?s[2]="".concat(e," and ").concat(s[2]):s[2]=e),n.push(s))}},n}},15:t=>{function n(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,i=new Array(n);e<n;e++)i[e]=t[e];return i}t.exports=function(t){var e,i,o=(i=4,function(t){if(Array.isArray(t))return t}(e=t)||function(t,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var e=[],i=!0,o=!1,r=void 0;try{for(var A,a=t[Symbol.iterator]();!(i=(A=a.next()).done)&&(e.push(A.value),!n||e.length!==n);i=!0);}catch(t){o=!0,r=t}finally{try{i||null==a.return||a.return()}finally{if(o)throw r}}return e}}(e,i)||function(t,e){if(t){if("string"==typeof t)return n(t,e);var i=Object.prototype.toString.call(t).slice(8,-1);return"Object"===i&&t.constructor&&(i=t.constructor.name),"Map"===i||"Set"===i?Array.from(t):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(t,e):void 0}}(e,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[1],A=o[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),c="/*# ".concat(s," */"),d=A.sources.map((function(t){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(t," */")}));return[r].concat(d).concat([c]).join("\n")}return[r].join("\n")}},667:t=>{t.exports=function(t,n){return n||(n={}),"string"!=typeof(t=t&&t.__esModule?t.default:t)?t:(/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t)}},610:(t,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"images/bg-desktop-dark.jpg"},199:(t,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"images/bg-desktop-light.jpg"},240:(t,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"images/bg-mobile-dark.jpg"},100:(t,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"images/bg-mobile-light.jpg"},379:(t,n,e)=>{var i,o=function(){var t={};return function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}t[n]=e}return t[n]}}(),r=[];function A(t){for(var n=-1,e=0;e<r.length;e++)if(r[e].identifier===t){n=e;break}return n}function a(t,n){for(var e={},i=[],o=0;o<t.length;o++){var a=t[o],s=n.base?a[0]+n.base:a[0],c=e[s]||0,d="".concat(s," ").concat(c);e[s]=c+1;var l=A(d),h={css:a[1],media:a[2],sourceMap:a[3]};-1!==l?(r[l].references++,r[l].updater(h)):r.push({identifier:d,updater:p(h,n),references:1}),i.push(d)}return i}function s(t){var n=document.createElement("style"),i=t.attributes||{};if(void 0===i.nonce){var r=e.nc;r&&(i.nonce=r)}if(Object.keys(i).forEach((function(t){n.setAttribute(t,i[t])})),"function"==typeof t.insert)t.insert(n);else{var A=o(t.insert||"head");if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(n)}return n}var c,d=(c=[],function(t,n){return c[t]=n,c.filter(Boolean).join("\n")});function l(t,n,e,i){var o=e?"":i.media?"@media ".concat(i.media," {").concat(i.css,"}"):i.css;if(t.styleSheet)t.styleSheet.cssText=d(n,o);else{var r=document.createTextNode(o),A=t.childNodes;A[n]&&t.removeChild(A[n]),A.length?t.insertBefore(r,A[n]):t.appendChild(r)}}function h(t,n,e){var i=e.css,o=e.media,r=e.sourceMap;if(o?t.setAttribute("media",o):t.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleSheet)t.styleSheet.cssText=i;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(i))}}var C=null,m=0;function p(t,n){var e,i,o;if(n.singleton){var r=m++;e=C||(C=s(n)),i=l.bind(null,e,r,!1),o=l.bind(null,e,r,!0)}else e=s(n),i=h.bind(null,e,n),o=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)};return i(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap)return;i(t=n)}else o()}}t.exports=function(t,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===i&&(i=Boolean(window&&document&&document.all&&!window.atob)),i));var e=a(t=t||[],n);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var i=0;i<e.length;i++){var o=A(e[i]);r[o].references--}for(var s=a(t,n),c=0;c<e.length;c++){var d=A(e[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}e=s}}}}},n={};function e(i){if(n[i])return n[i].exports;var o=n[i]={id:i,exports:{}};return t[i](o,o.exports,e),o.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var i in n)e.o(n,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:n[i]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),(()=>{var t,n,i=e(379),o=e.n(i),r=e(28);o()(r.Z,{insert:"head",singleton:!1}),r.Z.locals,e.p,e.p,e.p;class A{constructor(){this.storageKey="id",this.currID=0,this.storageKey="id",this.currID=this.loadId()}static getInstance(){return A.instance||(A.instance=new A),A.instance}generateId(){return this.currID++,this.saveId(),this.currID}saveId(){localStorage.setItem(this.storageKey,this.currID.toString())}loadId(){const t=localStorage.getItem(this.storageKey);return t?parseInt(t):0}}class a{constructor(t="",n){const e=A.getInstance();if(n){const{id:t,content:e,isChecked:i}=n;this._id=t,this._content=e,this._isChecked=i}else this._id=e.generateId(),this._content=t,this._isChecked=!1}toSave(){return{id:this._id,content:this._content,isChecked:this._isChecked}}get id(){return this._id}get content(){return this._content}get isChecked(){return this._isChecked}set isChecked(t){this._isChecked=t}}class s{constructor(){this.items=this.load()}add(t){const n=new a(t);return this.items.unshift(n),this.save(),n}remove(t){this.items=this.items.filter((n=>n.id!=t)),this.save()}updateCheck(t){const n=this.items.find((n=>n.id==t));n.isChecked=!n.isChecked,this.save()}updateOrder(t,n){const e=this.items.findIndex((n=>n.id==t)),[i]=this.items.splice(e,1);this.items.splice(n,0,i),this.save()}removeCompleted(){this.items=this.active,this.save()}load(){const t=localStorage.getItem(s.toSaveKey);return t?JSON.parse(t).map((t=>new a("",t))):[]}save(){const t=this.items.map((t=>t.toSave())),n=JSON.stringify(t);localStorage.setItem(s.toSaveKey,n)}get leftItems(){return this.active.length}get all(){return this.items}get completed(){return this.items.filter((t=>t.isChecked))}get active(){return this.items.filter((t=>!t.isChecked))}get totalTodos(){return this.items.length}}s.toSaveKey="list";class c{constructor(t){this.elements=t,this.setPositions()}setPositions(){this.posElementsSelections=this.elements.reduce(this.calcReletaviPosReducer,[]).sort(this.compare)}getElement(t){var n;const e=null===(n=this.posElementsSelections)||void 0===n?void 0:n.find(((n,e,i)=>{const o=parseFloat(n.position);return(0==e||e==i.length-1||t>=parseFloat(i[e-1].position))&&t<=o}));return e?e.item:void 0}getIndex(t){var n;return null===(n=this.posElementsSelections)||void 0===n?void 0:n.findIndex((n=>n.item==t))}calcReletaviPosReducer(t,n){const{y:e,height:i}=n.getBoundingClientRect(),o=parseFloat((e+i/2).toString()).toFixed(2);return t.push({position:o,item:n}),t}compare(t,n){return t.position>n.position?1:t.position<n.position?-1:0}}!function(t){t.id="{id}",t.content="{content}",t.leftItem="{left}"}(t||(t={})),function(t){t.TodoItem='\n    \t<input type="checkbox" onchange="onCBChange(this.parentNode)"/>\n\t\t<p>{content}</p>\n        <img src="./images/icon-cross.svg" alt="delete" onclick="onDelete(this.parentNode)" />',t.NoItems='\n\t    <p>There are no tasks in your ToDo</p>\n\t    <i class="fas fa-clipboard"></i>    \n\t',t.ImgSrc="./images/icon-{theme}.svg"}(n||(n={}));class d{constructor(t){this.noItems=t}hide(){this.noItems.style.display="none"}show(){this.noItems.style.display="flex"}}const l=document.getElementById("todoList"),h=new s,C=new class{constructor(t){this.container=t}renderNew(t,n){var e;const i=this.createNewTodoItem(t),o=this.container.firstChild;"start"==n&&o?this.container.insertBefore(i,o):this.container.appendChild(i),null===(e=this.noItems)||void 0===e||e.hide()}renderList(t=[]){this.container.innerHTML="",this.noItems=void 0,0==t.length?this.renderNoItems():null==t||t.forEach((t=>this.renderNew(t,"end")))}renderFilter(t){var n;null===(n=this.noItems)||void 0===n||n.hide();const e=Array.from(this.container.children);let i=0;const o="all"==t;return e.forEach((n=>{const e=n.getElementsByTagName("input")[0];if(!e)return;const{checked:r}=e,A=o||"active"==t&&!r||"completed"==t&&r;return A&&i++,A?this.showTodoItem(n):this.hideTodoItem(n)})),0==i&&this.renderNoItems(),this.setDraggable(o),i}setDraggable(t){Array.from(this.container.children).forEach((n=>"noItems"!=n.id?this.setDraggableAttributes(n,t):void 0))}showTodoItem(t){t.style.display="flex"}hideTodoItem(t){t.style.display="none"}createNewTodoItem(e){const i=document.createElement("li"),o=e.id.toString();i.id=o,i.classList.add("item","todo-item");const r=n.TodoItem.replace(t.content,e.content);return i.innerHTML=r,e.isChecked&&(i.classList.add("checked"),i.getElementsByTagName("input")[0].checked=!0),i}renderNoItems(){if(!this.noItems){const t=document.createElement("li");t.classList.add("item","no-items"),t.id="noItems",t.innerHTML=n.NoItems,this.noItems=new d(t),this.container.appendChild(t)}this.noItems.show()}setDraggableAttributes(t,n){t.setAttribute("draggable",n.toString()),t.setAttribute("ondragstart","onDragStart(this)"),t.setAttribute("ondragend","onDragEnd(this)")}}(l),m=new class{constructor(){this.textTemplate="{left} items left",this.viewElement=document.getElementById("itemLeft"),this.updateLeftItems(0)}updateLeftItems(n){this.viewElement.innerHTML=this.textTemplate.replace(t.leftItem,n.toString())}},p=new class{constructor(){this.storageKey="theme",this.theme=this.loadTheme()}saveTheme(t){t="sun"==t?"moon":"sun",localStorage.setItem(this.storageKey,t)}loadTheme(){return localStorage.getItem(this.storageKey)||"moon"}};let g="all";C.renderList(h.all),C.setDraggable(!0),m.updateLeftItems(h.leftItems);const u=new class{constructor(t){this.container=t}onDragStart(t){this.updatePositions(),this.movedElement=t}onDragOver(t){var n;const e=null===(n=this.positions)||void 0===n?void 0:n.getElement(t);e!=this.movedElement&&(this.movedElement=e,this.updateLine())}onDragEnd(t){var n,e,i;if(null===(n=this.line)||void 0===n||n.remove(),this.line=void 0,this.movedElement!=t)return t=this.container.removeChild(t),this.movedElement?this.container.insertBefore(t,this.movedElement):this.container.appendChild(t),null===(e=this.positions)||void 0===e||e.setPositions(),null===(i=this.positions)||void 0===i?void 0:i.getIndex(t);this.movedElement=void 0}updateLine(){this.line||(this.line=document.createElement("hr"),this.line.classList.add("line")),this.container.insertBefore(this.line,this.movedElement)}updatePositions(){const t=Array.from(this.container.children);this.positions=new c(t)}}(l),b=new class{constructor(){this.container=document.getElementById("container"),this.beforeSiblingFooter=document.getElementById("itemLeft"),this.filter=document.getElementById("filter")}updateMediaQuery(t){t?(this.container.insertAdjacentElement("afterend",this.filter),this.filter.classList.add("filter-container"),this.filter.classList.add("item")):(this.beforeSiblingFooter.insertAdjacentElement("afterend",this.filter),this.filter.classList.remove("filter-container"),this.filter.classList.remove("item"))}},f=window.matchMedia("(max-width: 520px)");b.updateMediaQuery(f.matches),f.addListener((t=>b.updateMediaQuery(t.matches))),window.onload=()=>{"sun"==p.theme&&(document.getElementsByTagName("body")[0].classList.toggle("light"),document.getElementById("modeSwitch").setAttribute("src","./images/icon-moon.svg"))},window.onCBChange=t=>{t.classList.toggle("checked"),h.updateCheck(parseInt(t.id)),m.updateLeftItems(h.leftItems)},window.onDelete=t=>{h.remove(parseInt(t.id)),0==h.totalTodos&&C.renderList(),t.remove(),m.updateLeftItems(h.leftItems)},window.onAddItem=(t,n)=>{if(13==n.keyCode){if(n.preventDefault(),t.value&&""!=t.value){const n=h.add(t.value);C.renderNew(n,"start"),C.setDraggable("all"==g)}else B(t);t.value="",m.updateLeftItems(h.leftItems)}},window.onFilter=(t,n)=>{n!=g&&(y(g),C.renderFilter(n),t.classList.toggle("active"),g=n)},window.onClearCompleted=()=>{h.removeCompleted(),C.renderList(h.all),m.updateLeftItems(h.leftItems)},window.onDragStart=t=>{u.onDragStart(t)},document.ondragover=t=>{const{y:n}=t;u.onDragOver(n)},window.onDragEnd=t=>{const n=u.onDragEnd(t);n&&h.updateOrder(parseInt(t.id),n)},window.onModeToggle=t=>{const n=document.getElementsByTagName("body")[0].classList.toggle("light")?"moon":"sun";t.setAttribute("src",`./images/icon-${n}.svg`),p.saveTheme(n)};const B=t=>{t.placeholder="Give a todo name!",setTimeout((()=>{t.placeholder="Create a new todo..."}),1e3)},y=t=>{const n=document.getElementById(t);null==n||n.classList.toggle("active")}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,